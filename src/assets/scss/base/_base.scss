// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
}

html,
body,
main {
  margin: 0;
}

body {
  background-color: #fff;
  //&.opened-menu {
  //  @include r(1024) {
  //  overflow: hidden;
  //  }
  //}
}
.container_min {
  max-width: 1190px;
  @include r(1367) {
    max-width: 990px;
  }
  @include r(1024) {
    max-width: 100%;
  }
}
.inner-pd-50 {
  padding-right: 50px;
  padding-left: 50px;
}
.inner-pd-40 {
  padding-right: 40px;
  padding-left: 40px;
}
.inner-pd-30 {
  padding-right: 30px;
  padding-left: 30px;
}
.inner-pd-20 {
  padding-right: 20px;
  padding-left: 20px;
}

.section-linear-bg  {
  background-image: linear-gradient(180deg, rgba(235, 239, 241, 0) 0%, #ebeff1 100%);
}
.row-gap-50 {
  row-gap: 50px;
}

.row-gap-40 {
  row-gap: 40px;
}

.row-gap-30 {
  row-gap: 30px;
}

.row-gap-20 {
  row-gap: 20px;
}

.row-gap-15 {
  row-gap: 15px;
}

.row-gap-12 {
  row-gap: 12px;
}

.gap-20 {
  gap: 10px;
}

.gap-10 {
  gap: 10px;
}

.gap-8 {
  gap: 8px;
}

.gap-5 {
  gap: 5px;
}

.gap-15 {
  gap: 15px;
}


/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  box-sizing: inherit;
}

a {
  text-decoration: none;
  color: inherit;

  &:hover {
    text-decoration: none;
    color: inherit;
  }
}

img {
  max-width: 100%;
}

.btn-reset {
  border: none;
  background-color: transparent;
  cursor: pointer;
  padding: 0;
}

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: max-content;
  padding: 0 25px;
  height: 60px;
  max-width: 100%;
  font-size: 16px;
  font-weight: 500;
  border-radius: 30px;
  &:focus,
  &:active {
    outline: none;
    border: none;
    box-shadow: none;
  }
  &_white {
    background-color:$white;
    color: $black;
    transition: color $trns, background-color $trns;
    &:hover {
      color: $white;
      background-color: #000;
    }
  }
  &_purple {
    background-color: $purple2;
    color: $white;
    transition: color $trns, background-color $trns;
    &:hover {
      background-color: #000;
    }
  }
  &_tr {
    border: 1px solid currentColor;
    transition: color $trns, background-color $trns, border-color $trns;
    &:hover {
      background-color: #fff;
      color: $black;
      border-color: #fff;
    }
    &--white {
      color: $white;
    }
  }
}

.tabs {
  &__content {
    display: none;
    &.is-active {
      display: block;
    }
  }
}

.lnk {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.desktop-hidden {
  @include rmin(1024) {
    display: none;
  }
}
.mobile-hidden {
  @include r(1024) {
    display: none;
  }
}

.flex-all-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.bdrs-30 {
  border-radius: 30px;
}
.mb-15 {
  margin-bottom: 15px;
}

section,
footer,
header {
  max-width: 1920px;
  margin-left: auto;
  margin-right: auto;
}

.slider-nav {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 0 20px;
  &__pagination {
    display: flex;
    align-items: center;
    gap: 0 10px;
    span {
      width: 6px;
      height: 6px;
      border: 1px solid #A0A2A2;
      border-radius: 50%;
      background-color: transparent;
      opacity: 1;
      &.swiper-pagination-bullet-active {
        width: 10px;
        height: 10px;
        background-color: $purple;
        border-color: $purple;
      }
    }
  }
}
